{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoain\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\PomodoroDisplay.js\";\nimport React from \"react\";\nimport PauseDisplay from \"./PauseDisplay\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction PomodoroDisplay(props) {\n  {\n    /* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */\n  } // const durationSetterState = props.durationSetterState\n\n  let duration = null;\n  return props.session !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }\n  }, props.label, \" for \", props.focusDuration, \":00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }\n  }, props.timeRemainingInMinutes, \" remaining\"), /*#__PURE__*/React.createElement(PauseDisplay, {\n    pause: props.pause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  })));\n}\n\nexport default PomodoroDisplay;","map":{"version":3,"sources":["C:/Users/hoain/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/PomodoroDisplay.js"],"names":["React","PauseDisplay","minutesToDuration","PomodoroDisplay","props","duration","session","label","focusDuration","timeRemainingInMinutes","pause"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AACjC;AAAC;AAAyH,GADzF,CAEjC;;AACE,MAAIC,QAAQ,GAAG,IAAf;AAEE,SAAOD,KAAK,CAACE,OAAN,KAAkB,IAAlB,iBAA0B;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACzB;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,KADT,WACqBH,KAAK,CAACI,aAD3B,gBAFF,eAME;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,sBADT,eANF,eASE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAIL,KAAK,CAACM,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADyB,CAAjC;AAaH;;AAED,eAAeP,eAAf","sourcesContent":["import React from \"react\"\r\nimport PauseDisplay from \"./PauseDisplay\"\r\nimport { minutesToDuration } from \"../utils/duration\";\r\n\r\nfunction PomodoroDisplay (props) {\r\n{/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}           \r\n// const durationSetterState = props.durationSetterState\r\n  let duration = null;\r\n  \r\n    return props.session !== null && <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n             {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}    \r\n              <h2 data-testid=\"session-title\">\r\n                {props.label} for {props.focusDuration}:00 minutes\r\n              </h2>\r\n           {/* TODO: Update message below correctly format the time remaining in the current session */}    \r\n              <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                {props.timeRemainingInMinutes} remaining\r\n              </p>\r\n              <PauseDisplay pause = {props.pause } />\r\n            </div>\r\n          </div>\r\n}\r\n\r\nexport default PomodoroDisplay"]},"metadata":{},"sourceType":"module"}