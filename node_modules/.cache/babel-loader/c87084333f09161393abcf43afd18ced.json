{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoain\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\TimerSessionDisplay.js\";\nimport React from \"react\";\nimport PauseDisplay from \"./PauseDisplay\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction TimerSessionDisplay(props) {\n  {\n    /* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */\n  } //Create a holder variable, then assign it to the props.focusDuration or props.breakDuration depending on the props.label\n\n  let duration = null;\n  props.label === \"Focusing\" ? duration = props.focusDuration : duration = props.breakDuration; //Converting the duration to the mm:ss format\n\n  duration = minutesToDuration(duration); //Display the timer if the session is active\n\n  return props.session !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, props.label, \" for \", duration, \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, props.timeRemainingInMinutes, \" remaining\"), /*#__PURE__*/React.createElement(PauseDisplay, {\n    pause: props.pause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default TimerSessionDisplay;","map":{"version":3,"sources":["C:/Users/hoain/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/TimerSessionDisplay.js"],"names":["React","PauseDisplay","minutesToDuration","TimerSessionDisplay","props","duration","label","focusDuration","breakDuration","session","timeRemainingInMinutes","pause"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,mBAAT,CAA8BC,KAA9B,EAAqC;AACrC;AAAC;AAAyH,GADrF,CAGnC;;AACA,MAAIC,QAAQ,GAAG,IAAf;AAEAD,EAAAA,KAAK,CAACE,KAAN,KAAgB,UAAhB,GACED,QAAQ,GAAGD,KAAK,CAACG,aADnB,GAEEF,QAAQ,GAAGD,KAAK,CAACI,aAFnB,CANmC,CAUnC;;AACAH,EAAAA,QAAQ,GAAGH,iBAAiB,CAACG,QAAD,CAA5B,CAXmC,CAanC;;AACA,SAAOD,KAAK,CAACK,OAAN,KAAkB,IAAlB,iBAA0B;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC7B;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACE,KADT,WACqBD,QADrB,aAFA,eAMA;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACM,sBADT,eANA,eAUA,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAIN,KAAK,CAACO,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,CAD6B,CAAjC;AAcD;;AAED,eAAeR,mBAAf","sourcesContent":["import React from \"react\"\r\nimport PauseDisplay from \"./PauseDisplay\"\r\nimport { minutesToDuration } from \"../utils/duration\";\r\n\r\nfunction TimerSessionDisplay (props) {\r\n{/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}           \r\n\r\n  //Create a holder variable, then assign it to the props.focusDuration or props.breakDuration depending on the props.label\r\n  let duration = null;\r\n\r\n  props.label === \"Focusing\"\r\n  ? duration = props.focusDuration\r\n  : duration = props.breakDuration;\r\n\r\n  //Converting the duration to the mm:ss format\r\n  duration = minutesToDuration(duration);\r\n\r\n  //Display the timer if the session is active\r\n  return props.session !== null && <div className=\"row mb-2\">\r\n      <div className=\"col\">\r\n      {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}    \r\n      <h2 data-testid=\"session-title\">\r\n        {props.label} for {duration} minutes\r\n      </h2>\r\n      {/* TODO: Update message below correctly format the time remaining in the current session */}    \r\n      <p className=\"lead\" data-testid=\"session-sub-title\">\r\n        {props.timeRemainingInMinutes} remaining\r\n      </p>\r\n      {/* Create the PauseDisplay component to display \"PAUSED\" when the pause button is clicked */}    \r\n      <PauseDisplay pause = {props.pause } />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default TimerSessionDisplay"]},"metadata":{},"sourceType":"module"}